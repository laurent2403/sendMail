<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.laurent.sendMail</groupId>
	<artifactId>sendMail</artifactId>
	<version>0.0.1</version>
	<packaging>jar</packaging>

	<name>emailcegim</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- format de l'heure du build -->
		<maven.build.timestamp.format>dd/MM/yyyy-HH:mm</maven.build.timestamp.format>
		<!-- nom de l'application -->
		<application.name>${project.name}</application.name>
		<!-- classe contenant le main de l'application -->
		<application.main.class>com.cegim.emailcegim.app.App</application.main.class>
		<!-- permet de changer l'environnement cible -->
		<!-- valeurs possibles : dev ou prod -->
		<target.env>dev</target.env>
		<!-- permet de changer le client cible -->
		<!-- valeurs possibles : cegim -->
		<target.client>cegim</target.client>
		<!-- permet de changer l'os cible -->
		<!-- valeurs possibles : linux ou windows -->
		<target.os>linux</target.os>
	</properties>

	<dependencies>

		<!-- Librairie de test unitaire -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>

		<!-- Commons-email de Apache -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-email</artifactId>
			<version>1.4</version>
		</dependency>

		<!-- Commons-cli de Apache -->
		<dependency>
			<groupId>commons-cli</groupId>
			<artifactId>commons-cli</artifactId>
			<version>1.3.1</version>
		</dependency>

		<!-- Commons lang3 de Apache -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>3.1</version>
		</dependency>

		<!-- Joda time -->
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.8.2</version>
		</dependency>

	</dependencies>

	<repositories>

		<!-- Repository de Codehaus -->
		<repository>
			<id>Codehaus Snapshots</id>
			<url>http://nexus.codehaus.org/snapshots/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</repository>

	</repositories>

	<pluginRepositories>

		<!-- PluginRepository de Codehaus -->
		<pluginRepository>
			<id>Codehaus Snapshots</id>
			<url>http://nexus.codehaus.org/snapshots/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>true</enabled>  <!-- Workaround for MNG-2974, see note below -->
			</releases>
		</pluginRepository>

	</pluginRepositories>

	<build>
		<plugins>

			<!-- definition du compilateur -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
				</configuration>
			</plugin>

			<!-- insere le numero de version du pom dans le manifest du jar -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>

			<!-- cree un seul gros jar incluant toutes les dependances -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>2.4.2</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<manifestEntries>
										<Main-Class>${application.main.class}</Main-Class>
									</manifestEntries>
								</transformer>
							</transformers>
							<finalName>uber-${project.artifactId}-${project.version}</finalName>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.7</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<!-- here the phase you need -->
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/target</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- generation de la javadoc avec des diagrammes (mvn javadoc:javadoc) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9</version>
				<configuration>
					<doclet>org.umlgraph.doclet.UmlGraphDoc</doclet>
					<docletArtifact>
						<groupId>org.umlgraph</groupId>
						<artifactId>umlgraph</artifactId>
						<version>5.6</version>
					</docletArtifact>
					<additionalparam>-views -all</additionalparam>
					<useStandardDocletOptions>true</useStandardDocletOptions>
				</configuration>
			</plugin>

		</plugins>

	</build>
</project>

